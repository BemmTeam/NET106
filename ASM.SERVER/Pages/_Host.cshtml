@page "/"
@namespace ASM.SERVER.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ASM.SERVER</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="ASM.SERVER.styles.css" rel="stylesheet" />
     <link href="_content/Syncfusion.Blazor.Themes/bootstrap5.css" rel="stylesheet" />
    <script src="_content/Syncfusion.Blazor.Core/scripts/syncfusion-blazor.min.js" type="text/javascript"></script>
    <!--Use below script reference if you are using Syncfusion.Blazor Single NuGet-->
    <!--<script  src="_content/Syncfusion.Blazor/scripts/syncfusion-blazor.min.js"  type="text/javascript"></script>-->
      <link href="_content/Smart.Blazor/css/smart.default.css" rel="stylesheet" />
    <script src="_content/Smart.Blazor/js/smart.blazor.js"></script>
<script src="_content/Smart.Blazor/js/smart.elements.js"></script>
<script type="module" src="_content/Smart.Blazor/js/modules/smart.table.js"></script>
<script src="_content/BlazorTable/BlazorTable.min.js"></script>
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    
    <script>
    window.insertResponseHandler = (dotNetHelper) => {
          const fileupload = document.querySelector('smart-file-upload');
        fileupload.responseHandler = function(xhr) { 
            
            if (xhr.status === 200) {
                return dotNetHelper.invokeMethodAsync("setData", xhr.response);
            }
        
        };
         console.log("đăng ký event response upload file");
      
    }

    window.toastApp = function(message , type) {

        const toast = document.getElementById('toastApp');
        toast.animation = "advanced"; 
        toast.value = message;
        toast.type  = type;
        toast.open();
    }

    </script>
    <script src="_framework/blazor.server.js"></script>

</body>
</html>
